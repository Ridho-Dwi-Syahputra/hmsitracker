<!DOCTYPE html>
<html lang="id">
<head>
  <meta charset="UTF-8" />
  <title><%= title %></title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link rel="stylesheet"
        href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css"
        crossorigin="anonymous" referrerpolicy="no-referrer" />
  <style>
    .table-fixed { table-layout: fixed; }
    .table-fixed th:nth-child(1) { width: 60px; }
    .table-fixed th:nth-child(2) { width: 25%; }
    .table-fixed th:nth-child(3) { width: 18%; }
    .table-fixed th:nth-child(4) { width: 12%; }
    .table-fixed th:nth-child(5) { width: 13%; }
    .table-fixed th:nth-child(6) { width: 80px; }
    .text-ellipsis { overflow: hidden; text-overflow: ellipsis; white-space: nowrap; }
  </style>
</head>
<body class="bg-orange-50 min-h-screen flex flex-col">

  <%- include('../partials/navbarDPA', { user: user, unreadCount: typeof unreadCount !== 'undefined' ? unreadCount : 0 }) %>

  <%- include('../partials/sidebarDPA', { activeNav: 'Belum dievaluasi', user: user }) %>

  <main class="lg:ml-80 px-6 pt-20 pb-8 flex-grow">
    <div class="max-w-7xl mx-auto bg-white rounded-2xl border border-orange-200 shadow-xl overflow-hidden">

      <div class="bg-orange-500 px-6 py-6 text-white">
        <h1 class="text-2xl font-bold"><%= title %></h1>
        <p class="text-sm text-orange-100">Daftar laporan kegiatan dari semua divisi HMSI yang memerlukan evaluasi.</p>
      </div>

      <div class="p-6 sm:p-8">

        <!-- 🔍 Filter Bar -->
        <div class="flex flex-col md:flex-row md:items-center md:justify-between gap-4 mb-6 flex-wrap">

          <!-- Pencarian -->
          <div class="flex-1">
            <div class="relative">
              <input id="searchInput" type="text" placeholder="Cari laporan..."
                class="w-full pl-10 pr-4 py-3 border rounded-xl text-sm
                       border-gray-300 focus:border-orange-500 focus:ring-2 focus:ring-orange-500
                       placeholder-gray-400 transition-all duration-300">
              <i class="fa-solid fa-magnifying-glass absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400"></i>
            </div>
          </div>

          <!-- Filter Divisi -->
          <div class="relative">
            <button id="divisiDropdownBtn"
              class="flex items-center justify-between gap-2 px-4 py-3 border border-gray-300 rounded-xl text-sm bg-white
                     hover:border-orange-500 hover:shadow-md focus:ring-2 focus:ring-orange-500 transition-all duration-200">
              <span id="divisiDropdownLabel">Semua Divisi</span>
              <i class="fa-solid fa-chevron-down text-orange-500"></i>
            </button>
            <div id="divisiDropdownMenu"
              class="hidden absolute right-0 mt-2 w-48 bg-white border border-orange-200 rounded-lg shadow-lg z-10">
              <ul class="text-sm text-gray-700">
                <li><button class="w-full text-left px-4 py-2 hover:bg-orange-100" data-value="all">Semua Divisi</button></li>
                <%
                  const uniqueDivisi = [...new Set(laporan.map(l => l.divisi).filter(Boolean))].sort((a,b)=>a.localeCompare(b));
                  uniqueDivisi.forEach(div => {
                %>
                  <li><button class="w-full text-left px-4 py-2 hover:bg-orange-100" data-value="<%= div %>"><%= div %></button></li>
                <% }); %>
              </ul>
            </div>
          </div>

          <!-- Filter Program Kerja (Dinamis) -->
          <div class="relative hidden" id="prokerFilterContainer">
            <button id="prokerDropdownBtn"
              class="flex items-center justify-between gap-2 px-4 py-3 border border-gray-300 rounded-xl text-sm bg-white
                     hover:border-orange-500 hover:shadow-md focus:ring-2 focus:ring-orange-500 transition-all duration-200">
              <span id="prokerDropdownLabel">Semua Program Kerja</span>
              <i class="fa-solid fa-chevron-down text-orange-500"></i>
            </button>
            <div id="prokerDropdownMenu"
              class="hidden absolute right-0 mt-2 w-60 bg-white border border-orange-200 rounded-lg shadow-lg z-10 max-h-60 overflow-y-auto">
              <ul id="prokerList" class="text-sm text-gray-700">
                <li><span class="block px-4 py-2 text-gray-400 italic">Pilih divisi terlebih dahulu</span></li>
              </ul>
            </div>
          </div>
        </div>

        <!-- 🔸 Tabel Laporan -->
        <% if (!laporan || laporan.length === 0) { %>
          <div class="flex flex-col items-center space-y-4 py-20 text-center">
            <i class="fa-solid fa-folder-open text-4xl text-gray-300 mb-3"></i>
            <p class="text-lg font-semibold text-gray-700">Belum Ada Laporan</p>
            <p class="text-gray-500">Tidak ada laporan yang memerlukan evaluasi saat ini.</p>
          </div>
        <% } else { %>
          <div class="overflow-x-auto p-2 shadow-sm rounded-xl">
            <table class="min-w-full text-sm text-center border border-orange-200 rounded-xl overflow-hidden border-separate border-spacing-0 table-fixed">
              <thead class="bg-orange-100 text-gray-700">
                <tr>
                  <th class="py-3 px-4 font-semibold border border-orange-200">No</th>
                  <th class="py-3 px-4 font-semibold border border-orange-200 text-left">Judul Laporan</th>
                  <th class="py-3 px-4 font-semibold border border-orange-200">Program Kerja</th>
                  <th class="py-3 px-4 font-semibold border border-orange-200">Divisi</th>
                  <th class="py-3 px-4 font-semibold border border-orange-200">Tanggal Upload</th>
                  <th class="py-3 px-4 font-semibold border border-orange-200">Aksi</th>
                </tr>
              </thead>
              <tbody id="laporanTable">
                <% laporan.forEach(function(l, i) { %>
                  <tr class="hover:bg-orange-50 transition"
                      data-divisi="<%= l.divisi || '' %>"
                      data-proker="<%= l.namaProker || '' %>">
                    <td class="py-3 px-4 border border-orange-100"><%= i + 1 %></td>
                    <td class="py-3 px-4 font-medium text-gray-800 border border-orange-100 text-left text-ellipsis" title="<%= l.judul_laporan %>">
                      <%= l.judul_laporan %>
                    </td>
                    <td class="py-3 px-4 text-gray-600 border border-orange-100 text-ellipsis" title="<%= l.namaProker %>"><%= l.namaProker || '-' %></td>
                    <td class="py-3 px-4 text-gray-600 border border-orange-100"><%= l.divisi || '-' %></td>
                    <td class="py-3 px-4 text-gray-600 border border-orange-100"><%= l.tanggalFormatted %></td>
                    <td class="py-3 px-4 border border-orange-100">
                      <div class="flex justify-center">
                        <a href="/dpa/laporan/<%= l.id_laporan %>" 
                          class="text-orange-500 hover:text-orange-700 transition transform hover:scale-110 p-1" title="Detail">
                          <i class="fa-solid fa-eye text-lg"></i>
                        </a>
                      </div>
                    </td>
                  </tr>
                <% }); %>
              </tbody>
            </table>
          </div>

          <!-- 📄 Pagination -->
          <div class="flex justify-center items-center gap-2 mt-6" id="pagination">
            <button id="prevPage" class="px-4 py-2 bg-orange-100 text-orange-700 rounded-lg hover:bg-orange-200 disabled:opacity-50">Prev</button>
            <span id="pageInfo" class="text-gray-700"></span>
            <button id="nextPage" class="px-4 py-2 bg-orange-100 text-orange-700 rounded-lg hover:bg-orange-200 disabled:opacity-50">Next</button>
          </div>
        <% } %>
      </div>
    </div>
  </main>

  <script>
    document.addEventListener("DOMContentLoaded", () => {
      const searchInput = document.getElementById("searchInput");
      const tbody = document.getElementById("laporanTable");
      let rows = Array.from(tbody?.querySelectorAll("tr") || []);
      const divisiBtn = document.getElementById("divisiDropdownBtn");
      const divisiMenu = document.getElementById("divisiDropdownMenu");
      const divisiLabel = document.getElementById("divisiDropdownLabel");
      const prokerBtn = document.getElementById("prokerDropdownBtn");
      const prokerMenu = document.getElementById("prokerDropdownMenu");
      const prokerLabel = document.getElementById("prokerDropdownLabel");
      const prokerFilterContainer = document.getElementById("prokerFilterContainer");
      const prokerList = document.getElementById("prokerList");

      const rowsPerPage = 10;
      let currentPage = 1;

      // Tutup dropdown saat klik di luar
      document.addEventListener("click", (e) => {
        if (!divisiBtn.contains(e.target)) divisiMenu.classList.add("hidden");
        if (!prokerBtn.contains(e.target)) prokerMenu.classList.add("hidden");
      });

      [divisiBtn, prokerBtn].forEach(btn => {
        btn.addEventListener("click", e => {
          e.stopPropagation();
          const menu = btn.nextElementSibling;
          document.querySelectorAll('[id$="DropdownMenu"]').forEach(m => m.classList.add("hidden"));
          menu.classList.toggle("hidden");
        });
      });

      // Relasi Divisi → Proker
      const divisiToProker = {};
      rows.forEach(row => {
        const div = row.dataset.divisi;
        const prok = row.dataset.proker;
        if (!div || !prok) return;
        if (!divisiToProker[div]) divisiToProker[div] = new Set();
        divisiToProker[div].add(prok);
      });

      // Filter Divisi dan Proker
      divisiMenu.querySelectorAll("button").forEach(btn => {
        btn.addEventListener("click", () => {
          const selectedDiv = btn.dataset.value;
          divisiLabel.textContent = selectedDiv === "all" ? "Semua Divisi" : selectedDiv;
          divisiMenu.classList.add("hidden");
          currentPage = 1;

          if (selectedDiv !== "all" && divisiToProker[selectedDiv]) {
            prokerFilterContainer.classList.remove("hidden");
            const prokerArr = Array.from(divisiToProker[selectedDiv]).sort((a,b)=>a.localeCompare(b));
            prokerList.innerHTML = `
              <li><button class="w-full text-left px-4 py-2 hover:bg-orange-100" data-value="all">Semua Program Kerja</button></li>
              ${prokerArr.map(p=>`<li><button class='w-full text-left px-4 py-2 hover:bg-orange-100' data-value='${p}'>${p}</button></li>`).join("")}
            `;
            prokerList.querySelectorAll("button").forEach(b=>{
              b.addEventListener("click", ()=>{
                prokerLabel.textContent = b.dataset.value === "all" ? "Semua Program Kerja" : b.dataset.value;
                prokerMenu.classList.add("hidden");
                filterRows();
              });
            });
          } else {
            prokerFilterContainer.classList.add("hidden");
            prokerLabel.textContent = "Semua Program Kerja";
          }
          filterRows();
        });
      });

      // 🔎 Filter dan pagination
      function filterRows() {
        const searchValue = searchInput.value.toLowerCase();
        const selectedDivisi = divisiLabel.textContent.trim();
        const selectedProker = prokerLabel.textContent.trim();

        rows.forEach(row => {
          const judul = row.cells[1]?.innerText.toLowerCase() || "";
          const program = row.cells[2]?.innerText.trim() || "";
          const divisi = row.cells[3]?.innerText.trim() || "";

          const matchSearch = judul.includes(searchValue) || program.toLowerCase().includes(searchValue);
          const matchDivisi = selectedDivisi === "Semua Divisi" || divisi === selectedDivisi;
          const matchProker = selectedProker === "Semua Program Kerja" || program === selectedProker;

          row.dataset.visible = (matchSearch && matchDivisi && matchProker) ? "true" : "false";
        });
        paginate();
      }

      function paginate() {
        const visibleRows = rows.filter(r => r.dataset.visible !== "false");
        const totalPages = Math.ceil(visibleRows.length / rowsPerPage);
        if (currentPage > totalPages) currentPage = totalPages || 1;

        rows.forEach(r => r.style.display = "none");
        visibleRows.forEach((r, i) => {
          if (i >= (currentPage-1)*rowsPerPage && i < currentPage*rowsPerPage) r.style.display = "";
        });
        document.getElementById("pageInfo").textContent = `Halaman ${currentPage} dari ${totalPages || 1}`;
        document.getElementById("prevPage").disabled = currentPage === 1;
        document.getElementById("nextPage").disabled = currentPage === totalPages || totalPages === 0;
      }

      searchInput.addEventListener("input", () => { currentPage = 1; filterRows(); });
      document.getElementById("prevPage").addEventListener("click", () => { if (currentPage > 1) { currentPage--; paginate(); } });
      document.getElementById("nextPage").addEventListener("click", () => {
        const visibleRows = rows.filter(r => r.dataset.visible !== "false");
        const totalPages = Math.ceil(visibleRows.length / rowsPerPage);
        if (currentPage < totalPages) { currentPage++; paginate(); }
      });
      rows.forEach(r => r.dataset.visible = "true");
      paginate();
    });
  </script>
</body>
</html>
