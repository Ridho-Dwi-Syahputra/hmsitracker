<!DOCTYPE html>
<html lang="id">
<head>
  <meta charset="UTF-8">
  <title><%= title %></title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link rel="stylesheet"
        href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css"
        crossorigin="anonymous" referrerpolicy="no-referrer" />
</head>
<body class="bg-gray-50 min-h-screen flex flex-col">

  <!-- Navbar -->
  <%- include('../partials/navbarHMSI', { user: user, unreadCount: unreadCount }) %>

  <!-- Sidebar -->
  <%- include('../partials/sidebarHMSI', { user: user, activeNav: 'Program Kerja' }) %>

  <!-- Delete Confirmation Modal -->
  <div id="deleteModal" class="fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center hidden">
    <div class="bg-white rounded-2xl shadow-2xl p-8 max-w-md w-full mx-4 transform transition-all duration-300 scale-95 opacity-0" id="deleteModalContent">
      <div class="text-center">
        <div class="w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4">
          <svg class="w-8 h-8 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
          </svg>
        </div>
        <h3 class="text-xl font-bold text-gray-900 mb-2">Hapus Program Kerja?</h3>
        <p class="text-gray-600 mb-2">Apakah Anda yakin ingin menghapus program kerja</p>
        <p id="deleteProkerName" class="font-semibold text-gray-800 mb-4">"[Nama Program Kerja]"</p>
        <p class="text-sm text-red-600 mb-6">Tindakan ini tidak dapat dibatalkan!</p>
        <div class="flex gap-3 justify-center">
          <button id="cancelDelete" class="px-6 py-2 border border-gray-300 text-gray-700 rounded-xl hover:bg-gray-50 transition-colors duration-200 font-medium">
            Batal
          </button>
          <button id="confirmDelete" class="px-6 py-2 bg-red-600 text-white rounded-xl hover:bg-red-700 transition-colors duration-200 font-medium">
            Ya, Hapus
          </button>
        </div>
      </div>
    </div>
  </div>

  <!-- Success Delete Modal -->
  <div id="successDeleteModal" class="fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center hidden">
    <div class="bg-white rounded-2xl shadow-2xl p-8 max-w-md w-full mx-4 transform transition-all duration-300 scale-95 opacity-0" id="successDeleteModalContent">
      <div class="text-center">
        <div class="w-16 h-16 bg-orange-100 rounded-full flex items-center justify-center mx-auto mb-4">
          <svg class="w-8 h-8 text-orange-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
          </svg>
        </div>
        <h3 class="text-xl font-bold text-gray-900 mb-2">Berhasil Dihapus!</h3>
        <p class="text-gray-600 mb-6">Program kerja telah berhasil dihapus.</p>
        <button id="closeSuccessDeleteModal" class="w-full bg-orange-500 hover:bg-orange-600 text-white font-medium py-3 px-6 rounded-xl transition-colors duration-200">
          Mengerti
        </button>
      </div>
    </div>
  </div>

  <!-- Error Delete Modal -->
  <div id="errorDeleteModal" class="fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center hidden">
    <div class="bg-white rounded-2xl shadow-2xl p-8 max-w-md w-full mx-4 transform transition-all duration-300 scale-95 opacity-0" id="errorDeleteModalContent">
      <div class="text-center">
        <div class="w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4">
          <svg class="w-8 h-8 text-red-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </div>
        <h3 class="text-xl font-bold text-gray-900 mb-2">Gagal Menghapus!</h3>
        <p id="errorDeleteMessage" class="text-gray-600 mb-6">Terjadi kesalahan saat menghapus program kerja.</p>
        <button id="closeErrorDeleteModal" class="w-full bg-red-500 hover:bg-red-600 text-white font-medium py-3 px-6 rounded-xl transition-colors duration-200">
          Tutup
        </button>
      </div>
    </div>
  </div>

  <!-- Cannot Edit Modal -->
  <div id="cannotEditModal" class="fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center hidden">
    <div class="bg-white rounded-2xl shadow-2xl p-8 max-w-md w-full mx-4 transform transition-all duration-300 scale-95 opacity-0" id="cannotEditModalContent">
      <div class="text-center">
        <div class="w-16 h-16 bg-yellow-100 rounded-full flex items-center justify-center mx-auto mb-4">
          <svg class="w-8 h-8 text-yellow-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"></path>
          </svg>
        </div>
        <h3 class="text-xl font-bold text-gray-900 mb-2">Tidak Dapat Diubah</h3>
        <p class="text-gray-600 mb-6">Program kerja dengan status "Selesai" atau "Gagal" tidak dapat diubah atau dihapus.</p>
        <button id="closeCannotEditModal" class="w-full bg-yellow-500 hover:bg-yellow-600 text-white font-medium py-3 px-6 rounded-xl transition-colors duration-200">
          Mengerti
        </button>
      </div>
    </div>
  </div>

  <!-- Wrapper -->
  <main class="lg:ml-80 px-6 pt-20 pb-8 flex-grow">
    <div class="max-w-6xl mx-auto bg-white shadow-xl rounded-2xl overflow-hidden border border-orange-200">

      <!-- Header Card -->
      <div class="bg-orange-500 text-white px-6 py-6 flex items-center justify-between">
        <div>
          <h1 class="text-2xl font-bold">Kelola Program Kerja</h1>
          <p class="text-sm text-orange-100">Daftar proker & status pelaksanaan</p>
        </div>
        <a href="/hmsi/tambah-proker" 
          class="flex items-center space-x-2 px-4 py-2 bg-white text-orange-600 rounded-lg font-semibold
                 transition-all duration-200 hover:bg-orange-100 hover:scale-105 active:scale-95">
          <i class="fa-solid fa-plus"></i>
          <span>Tambah Proker</span>
        </a>
      </div>

      <!-- Body Card -->
      <div class="p-6 sm:p-8">

        <!-- Search & Filter -->
        <div class="flex flex-col md:flex-row md:items-center md:justify-between gap-4 mb-6">
          <div class="flex-1">
            <div class="relative">
              <input id="searchInput" type="text" placeholder="Cari program kerja..."
                class="w-full pl-10 pr-4 py-3 border rounded-xl text-sm
                       border-gray-300 focus:border-orange-500 focus:ring-2 focus:ring-orange-500
                       focus:bg-orange-50 focus:text-orange-700 
                       placeholder-gray-400 focus:placeholder-orange-400
                       transition-all duration-300">
              <i class="fa-solid fa-magnifying-glass absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400"></i>
            </div>
          </div>

          <div class="relative">
            <button id="dropdownButton" 
              class="flex items-center justify-between gap-2 px-4 py-3 border border-gray-300 rounded-xl text-sm bg-white
                     hover:border-orange-500 hover:shadow-md focus:ring-2 focus:ring-orange-500 focus:border-orange-500 transition-all duration-200">
              <span id="dropdownLabel">Semua Status</span>
              <i class="fa-solid fa-chevron-down text-orange-500"></i>
            </button>
            <div id="dropdownMenu" 
              class="hidden absolute right-0 mt-2 w-48 bg-white border border-orange-200 rounded-lg shadow-lg z-10">
              <ul class="text-sm text-gray-700">
                <li><button class="w-full text-left px-4 py-2 hover:bg-orange-100" data-value="all">Semua Status</button></li>
                <li><button class="w-full text-left px-4 py-2 hover:bg-orange-100" data-value="Belum Dimulai">Belum Dimulai</button></li>
                <li><button class="w-full text-left px-4 py-2 hover:bg-orange-100" data-value="Sedang Berjalan">Sedang Berjalan</button></li>
                <li><button class="w-full text-left px-4 py-2 hover:bg-orange-100" data-value="Selesai">Selesai</button></li>
                <li><button class="w-full text-left px-4 py-2 hover:bg-orange-100" data-value="Gagal">Gagal</button></li>
              </ul>
            </div>
          </div>
        </div>

        <% if (!programs || programs.length === 0) { %>
          <!-- Empty State -->
          <div class="flex flex-col items-center space-y-4 py-20">
            <div class="w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center">
              <i class="fa-solid fa-folder-open text-2xl text-gray-400"></i>
            </div>
            <div class="text-center">
              <div class="text-xl font-semibold text-gray-800 mb-2">Belum ada program kerja</div>
              <div class="text-gray-500">Klik "Tambah Proker" untuk mulai membuat program kerja baru</div>
            </div>
          </div>
        <% } else { %>
          <!-- Tabel -->
          <div class="overflow-x-auto bg-white-50 p-2 shadow-sm rounded-xl">
            <table class="min-w-full text-sm text-center border border-orange-200 rounded-xl overflow-hidden border-separate border-spacing-0">
              <thead class="bg-orange-100 text-gray-700">
                <tr>
                  <th class="py-3 px-4 font-semibold border border-orange-200">No</th>
                  <th class="py-3 px-4 font-semibold border border-orange-200 text-left cursor-pointer" data-sort="namaProker">Nama Program <i class="fa-solid fa-sort text-gray-400 ml-1"></i></th>
                  <th class="py-3 px-4 font-semibold border border-orange-200 cursor-pointer" data-sort="divisi">Divisi <i class="fa-solid fa-sort text-gray-400 ml-1"></i></th>
                  <th class="py-3 px-4 font-semibold border border-orange-200">Penanggung Jawab</th>
                  <th class="py-3 px-4 font-semibold border border-orange-200 cursor-pointer" data-sort="status">Status <i class="fa-solid fa-sort text-gray-400 ml-1"></i></th>
                  <th class="py-3 px-4 font-semibold border border-orange-200">Aksi</th>
                </tr>
              </thead>
              <tbody id="programTable">
                <% programs.forEach((proker, index) => { 
                  const isDisabled = proker.status === 'Selesai' || proker.status === 'Gagal';
                %>
                  <tr class="hover:bg-orange-50 transition" data-visible="true">
                    <td class="py-3 px-4 border border-orange-100"><%= index + 1 %></td>
                    <td class="py-3 px-4 font-medium text-gray-800 border border-orange-100 text-left"><%= proker.namaProker %></td>
                    <td class="py-3 px-4 text-gray-600 border border-orange-100"><%= proker.divisi %></td>
                    <td class="py-3 px-4 text-gray-600 border border-orange-100"><%= proker.penanggungJawab %></td>
                    <td class="py-3 px-4 border border-orange-100">
                      <% if (proker.status === "Belum Dimulai") { %>
                        <span class="px-3 py-1 text-xs rounded-full bg-yellow-100 text-yellow-700 font-medium"><%= proker.status %></span>
                      <% } else if (proker.status === "Sedang Berjalan") { %>
                        <span class="px-3 py-1 text-xs rounded-full bg-blue-100 text-blue-700 font-medium"><%= proker.status %></span>
                      <% } else if (proker.status === "Selesai") { %>
                        <span class="px-3 py-1 text-xs rounded-full bg-green-100 text-green-700 font-medium"><%= proker.status %></span>
                      <% } else if (proker.status === "Gagal") { %>
                        <span class="px-3 py-1 text-xs rounded-full bg-red-100 text-red-700 font-medium"><%= proker.status %></span>
                      <% } else { %>
                        <span class="px-3 py-1 text-xs rounded-full bg-gray-100 text-gray-600 font-medium"><%= proker.status %></span>
                      <% } %>
                    </td>
                    <td class="py-3 px-4 flex justify-center gap-4 border border-orange-100">
                      <% if (isDisabled) { %>
                        <!-- Disabled Edit Button -->
                        <button type="button" 
                                class="text-gray-300 cursor-not-allowed" 
                                title="Tidak dapat diubah"
                                disabled>
                          <i class="fa-solid fa-pen-to-square text-lg"></i>
                        </button>
                        <!-- Disabled Delete Button -->
                        <button type="button" 
                                class="text-gray-300 cursor-not-allowed" 
                                title="Tidak dapat dihapus"
                                disabled>
                          <i class="fa-solid fa-trash text-lg"></i>
                        </button>
                      <% } else { %>
                        <!-- Active Edit Button -->
                        <a href="/hmsi/proker/<%= proker.id %>/edit" 
                           class="text-orange-500 hover:text-orange-700 transition transform hover:scale-110" 
                           title="Edit">
                          <i class="fa-solid fa-pen-to-square text-lg"></i>
                        </a>
                        <!-- Active Delete Button -->
                        <button type="button" 
                                class="delete-btn text-orange-500 hover:text-orange-700 transition transform hover:scale-110" 
                                title="Hapus"
                                data-id="<%= proker.id %>"
                                data-name="<%= proker.namaProker %>">
                          <i class="fa-solid fa-trash text-lg"></i>
                        </button>
                      <% } %>
                    </td>
                  </tr>
                <% }) %>
              </tbody>
            </table>
          </div>

          <!-- Pagination -->
          <div class="flex justify-center items-center gap-2 mt-6" id="pagination">
            <button id="prevPage" class="px-4 py-2 bg-orange-100 text-orange-700 rounded-lg hover:bg-orange-200 disabled:opacity-50">Prev</button>
            <span id="pageInfo" class="text-gray-700"></span>
            <button id="nextPage" class="px-4 py-2 bg-orange-100 text-orange-700 rounded-lg hover:bg-orange-200 disabled:opacity-50">Next</button>
          </div>
        <% } %>

      </div>
    </div>
  </main>

  <!-- Footer -->
  <%- include('../partials/footer') %>

  <script>
    // Modal functions
    function showModal(modalId) {
      const modal = document.getElementById(modalId);
      const content = document.getElementById(modalId + 'Content');
      
      modal.classList.remove('hidden');
      
      setTimeout(() => {
        content.classList.remove('scale-95', 'opacity-0');
        content.classList.add('scale-100', 'opacity-100');
      }, 10);
    }

    function hideModal(modalId) {
      const modal = document.getElementById(modalId);
      const content = document.getElementById(modalId + 'Content');
      
      content.classList.remove('scale-100', 'opacity-100');
      content.classList.add('scale-95', 'opacity-0');
      
      setTimeout(() => {
        modal.classList.add('hidden');
      }, 300);
    }

    // Delete functionality
    let currentDeleteId = null;
    let currentDeleteAction = null;

    // Modal event listeners
    document.getElementById('cancelDelete').addEventListener('click', () => {
      hideModal('deleteModal');
      currentDeleteId = null;
      currentDeleteAction = null;
    });

    document.getElementById('confirmDelete').addEventListener('click', () => {
      if (currentDeleteAction && currentDeleteId) {
        hideModal('deleteModal');
        
        fetch(currentDeleteAction, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
          }
        })
        .then(response => {
          if (response.ok) {
            showModal('successDeleteModal');
            const row = document.querySelector(`button[data-id="${currentDeleteId}"]`).closest('tr');
            if (row) {
              row.remove();
            }
          } else {
            return response.text().then(text => {
              throw new Error(text);
            });
          }
        })
        .catch(error => {
          console.error('Error:', error);
          document.getElementById('errorDeleteMessage').textContent = 'Terjadi kesalahan: ' + error.message;
          showModal('errorDeleteModal');
        })
        .finally(() => {
          currentDeleteId = null;
          currentDeleteAction = null;
        });
      }
    });

    document.getElementById('closeSuccessDeleteModal').addEventListener('click', () => {
      hideModal('successDeleteModal');
    });

    document.getElementById('closeErrorDeleteModal').addEventListener('click', () => {
      hideModal('errorDeleteModal');
    });

    document.getElementById('closeCannotEditModal').addEventListener('click', () => {
      hideModal('cannotEditModal');
    });

    // Close modal when clicking outside
    ['deleteModal', 'successDeleteModal', 'errorDeleteModal', 'cannotEditModal'].forEach(modalId => {
      document.getElementById(modalId).addEventListener('click', (e) => {
        if (e.target.id === modalId) {
          hideModal(modalId);
        }
      });
    });

    // Add event listeners to delete buttons
    document.addEventListener('click', (e) => {
      if (e.target.closest('.delete-btn')) {
        const deleteBtn = e.target.closest('.delete-btn');
        const prokerName = deleteBtn.dataset.name;
        const prokerId = deleteBtn.dataset.id;
        
        currentDeleteId = prokerId;
        currentDeleteAction = `/hmsi/proker/${prokerId}/delete`;
        
        document.getElementById('deleteProkerName').textContent = `"${prokerName}"`;
        showModal('deleteModal');
      }
    });

    // Filter & Pagination
    document.addEventListener("DOMContentLoaded", () => {
      const searchInput = document.getElementById("searchInput");
      const dropdownButton = document.getElementById("dropdownButton");
      const dropdownMenu = document.getElementById("dropdownMenu");
      const dropdownLabel = document.getElementById("dropdownLabel");
      const tbody = document.getElementById("programTable");
      let rows = tbody ? Array.from(tbody.querySelectorAll("tr")) : [];

      let statusValue = "all";
      const rowsPerPage = 10;
      let currentPage = 1;

      dropdownButton?.addEventListener("click", () => {
        dropdownMenu.classList.toggle("hidden");
      });

      dropdownMenu?.querySelectorAll("button").forEach(btn => {
        btn.addEventListener("click", () => {
          statusValue = btn.dataset.value;
          dropdownLabel.textContent = btn.textContent;
          dropdownMenu.classList.add("hidden");
          filterRows();
        });
      });

      // Sorting logic: clickable th[data-sort]
      const sortHeaders = document.querySelectorAll('th[data-sort]');
      let currentSort = { index: null, asc: true };

      sortHeaders.forEach(header => {
        header.addEventListener('click', () => {
          const index = Array.from(header.parentNode.children).indexOf(header);
          // toggle direction if same column
          if (currentSort.index === index) {
            currentSort.asc = !currentSort.asc;
          } else {
            currentSort.index = index;
            currentSort.asc = true;
          }

          // reset icons
          sortHeaders.forEach(h => {
            const i = h.querySelector('i');
            if (i) i.className = 'fa-solid fa-sort text-gray-400 ml-1';
          });

          const icon = header.querySelector('i');
          if (icon) {
            icon.className = currentSort.asc ? 'fa-solid fa-sort-up text-orange-500 ml-1' : 'fa-solid fa-sort-down text-orange-500 ml-1';
          }

          // sort rows array based on cell text at index
          rows.sort((a, b) => {
            const aText = (a.cells[currentSort.index]?.innerText || '').trim().toLowerCase();
            const bText = (b.cells[currentSort.index]?.innerText || '').trim().toLowerCase();
            if (aText < bText) return currentSort.asc ? -1 : 1;
            if (aText > bText) return currentSort.asc ? 1 : -1;
            return 0;
          });

          // re-append sorted rows to tbody
          rows.forEach(r => tbody.appendChild(r));
          // after sorting, re-run pagination (visibility preserved)
          paginate();
        });
      });

      function filterRows() {
        const searchValue = (searchInput?.value || '').toLowerCase();
        rows.forEach(row => {
          const namaProker = (row.cells[1]?.innerText || "").toLowerCase();
          const divisi = (row.cells[2]?.innerText || "").toLowerCase();
          const pj = (row.cells[3]?.innerText || "").toLowerCase();
          const status = (row.cells[4]?.innerText || "").trim();

          let matchSearch = namaProker.includes(searchValue) || divisi.includes(searchValue) || pj.includes(searchValue);
          let matchStatus = (statusValue === "all" || status === statusValue);

          row.dataset.visible = (matchSearch && matchStatus) ? "true" : "false";
        });
        paginate();
      }

      function paginate() {
        let visibleRows = rows.filter(row => row.dataset.visible === "true");
        let totalPages = Math.ceil(visibleRows.length / rowsPerPage);
        if (currentPage > totalPages) currentPage = totalPages || 1;

        rows.forEach(row => row.style.display = "none");
        visibleRows.forEach((row, index) => {
          if (index >= (currentPage-1)*rowsPerPage && index < currentPage*rowsPerPage) {
            row.style.display = "";
          }
        });

        document.getElementById("pageInfo").textContent = `Halaman ${currentPage} dari ${totalPages || 1}`;
        document.getElementById("prevPage").disabled = currentPage === 1;
        document.getElementById("nextPage").disabled = currentPage === totalPages || totalPages === 0;
      }

      document.getElementById("prevPage")?.addEventListener("click", () => { currentPage--; paginate(); });
      document.getElementById("nextPage")?.addEventListener("click", () => { currentPage++; paginate(); });
      searchInput?.addEventListener("input", () => {
        currentPage = 1;
        filterRows();
      });

      if (rows.length > 0) filterRows();
    });
  </script>
</body>
</html>
